{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["synthesisVoices","speechSynthesis","getVoices","App","props","state","voicesLoaded","loadVoices","bind","onvoiceschanged","this","setState","className","Loading","component","Entry","path","exact","WorkoutA","WorkoutB","to","Component","href","target","workoutState","BackToHome","callback","circuit","cancel","pause","done","start","StartButton","onClick","PauseButton","Done","announce","Workout","interval","undefined","item","timer","timePerExercise","timeBetweenExercises","countdown","window","setInterval","console","log","clearInterval","currentWorkoutItem","workoutItems","reset","src","exercises","newTimer","parseInt","text","utterance","SpeechSynthesisUtterance","message","Object","assign","voice","voiceURI","volume","rate","pitch","lang","speak","A","B","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8018df8b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, Redirect, Route, Switch } from 'react-router-dom';\nimport { FaPlay, FaPause } from 'react-icons/fa';\n\n\nvar synthesisVoices = speechSynthesis.getVoices();\n\nclass App extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state ={\n            voicesLoaded: false,\n        };\n\n        this.loadVoices = this.loadVoices.bind(this);\n    }\n\n    componentDidMount()\n    {\n        speechSynthesis.onvoiceschanged = this.loadVoices;\n    }\n\n    loadVoices()\n    {\n        synthesisVoices = speechSynthesis.getVoices();\n        this.setState({voicesLoaded: true});\n    }\n\n    render()\n    {\n        const { voicesLoaded } = this.state;\n\n        return (\n            <div className=\"App\">\n                {\n                    voicesLoaded === false ?\n                        <Loading /> :\n                        (\n                            <Switch>\n                                <Route component={ Entry } path=\"/\" exact />\n                                <Route component={ WorkoutA } path=\"/a\" exact />\n                                <Route component={ WorkoutB } path=\"/b\" exact />\n\n                                <Redirect to=\"/\" />\n                            </Switch>\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nfunction Entry()\n{\n    return (\n        <div className=\"Entry\">\n            <header>\n                <h1>Athlean X - Perfect Home Workout</h1>\n                <h2>\n                    <a href=\"https://www.youtube.com/watch?v=vc1E5CfRfos\" target=\"_blank\">\n                        https://www.youtube.com/watch?v=vc1E5CfRfos\n                    </a>\n                </h2>\n            </header>\n\n            <Link to=\"/a\" className=\"BigFlippingButton\">A</Link>\n            <Link to=\"/b\" className=\"BigFlippingButton\">B</Link>\n        </div>\n    );\n}\n\nclass WorkoutA extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            workoutState: 'not-started',\n        };\n    }\n\n    componentDidMount()\n    {\n        this.setState({workoutState: 'not-started'});\n    }\n\n    render()\n    {\n        const { workoutState } = this.state;\n\n        return (\n            <div className=\"WorkoutA\">\n                <h1>\n                    Workout A\n                </h1>\n                <BackToHome />\n\n                {\n                    workoutState === 'not-started' ?\n                        <StartButton callback={ () => { this.setState({workoutState: 'started'}); } } /> :\n                        (\n                            <Workout circuit=\"A\"\n                                state={ workoutState }\n                                cancel={ () => { this.setState({workoutState: 'not-started'}) } }\n                                pause={ () => { this.setState({workoutState: 'paused'}) } }\n                                done={ () => { this.setState({workoutState: 'done'}) } }\n                                start={ () => { this.setState({workoutState: 'started'}) } } />\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nclass WorkoutB extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            workoutState: 'not-started',\n        };\n    }\n\n    componentDidMount()\n    {\n        this.setState({workoutState: 'not-started'});\n    }\n\n    render()\n    {\n        const { workoutState } = this.state;\n\n        return (\n            <div className=\"WorkoutB\">\n                <h1>\n                    Workout B\n                </h1>\n                <BackToHome />\n\n                {\n                    workoutState === 'not-started' ?\n                        <StartButton callback={ () => { this.setState({workoutState: 'started'}); } } /> :\n                        (\n                            <Workout circuit=\"B\"\n                                state={ workoutState }\n                                cancel={ () => { this.setState({workoutState: 'not-started'}) } }\n                                pause={ () => { this.setState({workoutState: 'paused'}) } }\n                                done={ () => { this.setState({workoutState: 'done'}) } }\n                                start={ () => { this.setState({workoutState: 'started'}) } } />\n                        )\n                }\n            </div>\n        );\n    }\n}\n\nfunction BackToHome()\n{\n    return (\n        <h3>\n            <Link to=\"/\">Oops, go back</Link>\n        </h3>\n    );\n}\n\nfunction Loading()\n{\n    return (\n        <h1>Loading</h1>\n    );\n}\n\nclass StartButton extends Component\n{\n    render()\n    {\n        return (\n            <button className=\"BigFlippingButton\" onClick={ this.props.callback }>\n                <FaPlay />\n            </button>\n        );\n    }\n}\n\nclass PauseButton extends Component\n{\n    render()\n    {\n        return (\n            <button className=\"JustAFlippingButton\" onClick={ this.props.callback }>\n                <FaPause />\n            </button>\n        );\n    }\n}\n\nclass Done extends Component\n{\n    render()\n    {\n        announce('All done. Good workout mother flipper!');\n\n        return (\n            <div className=\"Done\">\n                Done!\n            </div>\n        );\n    }\n}\n\nclass Workout extends Component\n{\n    constructor(props)\n    {\n        super(props);\n\n        this.state = {\n            interval: undefined,\n            item: 0,\n            timer: timePerExercise + timeBetweenExercises,\n        };\n\n        this.countdown = this.countdown.bind(this);\n    }\n\n    componentDidMount()\n    {\n        let interval = window.setInterval(() => {\n            this.countdown();\n        }, 1000);\n\n        this.setState({interval: interval}, () => {\n            console.log(this.state);\n        });\n    }\n\n    componentWillUnmount()\n    {\n        window.clearInterval(this.state.interval);\n    }\n\n    render()\n    {\n        const { circuit, state } = this.props;\n        const { item, timer } = this.state;\n        const currentWorkoutItem = workoutItems[circuit][item];\n\n        return (\n            <div className=\"Workout\">\n                {\n                    state === 'done' ?\n                        <Done callback={ () => this.props.reset() } /> :\n                        (\n                            <>\n                                {\n                                    state === 'started' ?\n                                        <PauseButton callback={ () => this.props.pause() } /> :\n                                        <StartButton className=\"JustAFlippingButton\" callback={ () => this.props.start() } />\n                                }\n                                <div className=\"Content\">\n                                    <div className=\"Timer\">\n                                        { timer }\n                                    </div>\n\n                                    <div className=\"Title\">\n                                        <h1>\n                                            { currentWorkoutItem }\n                                        </h1>\n                                    </div>\n\n                                    <div className=\"Image\">\n                                        <img src={ `./images/${circuit}-${item + 1}.png` } />\n                                    </div>\n                                </div>\n                            </>\n                        )\n                }\n            </div>\n        );\n    }\n\n    countdown()\n    {\n        const { item, timer } = this.state;\n        const { state } = this.props;\n        const exercises = workoutItems[this.props.circuit];\n\n        if (state === 'paused') {\n            return;\n        }\n\n        const newTimer = parseInt(timer - 1, 10);\n\n        if (newTimer > timePerExercise) {\n            this.setState({timer: parseInt(timer - 1, 10)});\n\n            return;\n        }\n\n        if (newTimer === timePerExercise) {\n            announce(exercises[item] + '. Go!');\n        }\n\n        if (timer > 1) {\n            this.setState({timer: newTimer}, () => {\n                if (newTimer === 30) {\n                    announce('30 seconds left');\n                } else if (newTimer <= 10) {\n                    announce(newTimer);\n                }\n            });\n        } else if (timer === 1) {\n            if (typeof exercises[item + 1] !== 'undefined') {\n                this.setState({item: parseInt(item + 1, 10), timer: timePerExercise + timeBetweenExercises}, () => {\n                    if (timeBetweenExercises > 0) {\n                        announce(timeBetweenExercises + ' second break, then ' + exercises[item + 1]);\n                    }\n                });\n            } else {\n                this.props.done();\n                window.clearInterval(this.state.interval);\n            }\n        }\n    }\n}\n\nfunction announce(text)\n{\n    speechSynthesis.cancel();\n\n    let utterance = new SpeechSynthesisUtterance();\n    let message = Object.assign(\n        utterance,\n        {\n            voice: synthesisVoices[3],\n            voiceURI: 'native',\n            volume: 1,\n            rate: 1.1,\n            pitch: 1,\n            text: text,\n            lang: 'en-US',\n        }\n    );\n\n    speechSynthesis.speak(message);\n}\n\nconst workoutItems = {\n    A: [\n        'Single leg box squats',\n        'One and a half bottomed out squats',\n        'Jump squats',\n        'Handstand, or power push-ups',\n        'Rotational push-ups',\n        'Cobra push-ups',\n        'Heel touch squats',\n        'Sprinter lunge',\n        'Plyo sprinter lunge',\n        'Pull-ups or seated pull-ups',\n        'Human pullover or sliding pulldown',\n    ],\n    B: [\n        'Single leg box squats',\n        'One and a half bottomed out squats',\n        'Jump squats',\n        'Handstand, or power push-ups',\n    ],\n};\nconst timePerExercise = 3;\nconst timeBetweenExercises = 0;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}